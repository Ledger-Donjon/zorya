Argument list to give program being debugged when it is started is "a b 1 ".
Breakpoint 1 at 0x2302b0
tree[0] = ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb
tree[1] = 3e23e8160039594a33894f6564e1b1348bbd7a0088d42c4acb73eeaed59c009d

Calling GetMultiProof(tree, 1)...

Breakpoint 1, 0x00000000002302b0 in omni-vul3/merkle.GetMultiProof (tree=..., indices=...)
rax            0x7fffb7e12fd0      140736278376400
rbx            0x1                 1
rcx            0x2                 2
rdx            0x2                 2
rsi            0x7fffb7e11fb0      140736278372272
rdi            0x7fffb7e0ffa0      140736278364064
rbp            0x7fffb7e129f0      0x7fffb7e129f0
rsp            0x7fffb7e0fea8      0x7fffb7e0fea8
r8             0x7fffb7e12fd0      140736278376400
r9             0x1                 1
r10            0x0                 0
r11            0x202               514
r12            0x16                22
r13            0x2                 2
r14            0x0                 0
r15            0xe8                232
rip            0x2302b0            0x2302b0 <omni-vul3/merkle.GetMultiProof>
eflags         0x206               [ PF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
st0            0                   (raw 0x00000000000000000000)
st1            0                   (raw 0x00000000000000000000)
st2            0                   (raw 0x00000000000000000000)
st3            0                   (raw 0x00000000000000000000)
st4            0                   (raw 0x00000000000000000000)
st5            0                   (raw 0x00000000000000000000)
st6            0                   (raw 0x00000000000000000000)
st7            0                   (raw 0x00000000000000000000)
fctrl          0x37f               895
fstat          0x0                 0
ftag           0xffff              65535
fiseg          0x0                 0
fioff          0x0                 0
foseg          0x0                 0
fooff          0x0                 0
fop            0x0                 0
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
ymm0           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm1           {v16_bfloat16 = {0xbd8b, 0x7a, 0xd488, 0x4a2c, 0x73cb, 0xaeee, 0x9cd5, 0x9d00, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v16_half = {0xbd8b, 0x7a, 0xd488, 0x4a2c, 0x73cb, 0xaeee, 0x9cd5, 0x9d00, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_float = {0x7abd8b, 0x4a2cd488, 0xaeee73cb, 0x9d009cd5, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x4a2cd488007abd8b, 0x9d009cd5aeee73cb, 0x0, 0x0}, v32_int8 = {0x8b, 0xbd, 0x7a, 0x0, 0x88, 0xd4, 0x2c, 0x4a, 0xcb, 0x73, 0xee, 0xae, 0xd5, 0x9c, 0x0, 0x9d, 0x0 <repeats 16 times>}, v16_int16 = {0xbd8b, 0x7a, 0xd488, 0x4a2c, 0x73cb, 0xaeee, 0x9cd5, 0x9d00, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int32 = {0x7abd8b, 0x4a2cd488, 0xaeee73cb, 0x9d009cd5, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x4a2cd488007abd8b, 0x9d009cd5aeee73cb, 0x0, 0x0}, v2_int128 = {0x9d009cd5aeee73cb4a2cd488007abd8b, 0x0}}
ymm2           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm3           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm4           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm5           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm6           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm7           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm8           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm9           {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm10          {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm11          {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm12          {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm13          {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm14          {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
ymm15          {v16_bfloat16 = {0x0 <repeats 16 times>}, v16_half = {0x0 <repeats 16 times>}, v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 <repeats 32 times>}, v16_int16 = {0x0 <repeats 16 times>}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {0x0, 0x0}}
process 558002
Mapped address spaces:

          Start Addr           End Addr       Size     Offset  Perms  objfile
            0x200000           0x20c000     0xc000        0x0  r--p   /home/kgorna/Documents/zorya/external/qemu-mount/omni-vul3
            0x20c000           0x232000    0x26000     0xb000  r-xp   /home/kgorna/Documents/zorya/external/qemu-mount/omni-vul3
            0x232000           0x233000     0x1000    0x30000  rw-p   /home/kgorna/Documents/zorya/external/qemu-mount/omni-vul3
            0x233000           0x239000     0x6000    0x30000  rw-p   /home/kgorna/Documents/zorya/external/qemu-mount/omni-vul3
      0x7fffb7e00000     0x7ffff7e00000 0x40000000        0x0  rw-p   
      0x7ffff7ff9000     0x7ffff7ffd000     0x4000        0x0  r--p   [vvar]
      0x7ffff7ffd000     0x7ffff7fff000     0x2000        0x0  r-xp   [vdso]
      0x7ffffffdd000     0x7ffffffff000    0x22000        0x0  rw-p   [stack]
  0xffffffffff600000 0xffffffffff601000     0x1000        0x0  --xp   [vsyscall]
Breakpoint 1 at 0x2302b0
tree[0] = ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb
tree[1] = 3e23e8160039594a33894f6564e1b1348bbd7a0088d42c4acb73eeaed59c009d

Calling GetMultiProof(tree, 1)...

Breakpoint 1, 0x00000000002302b0 in omni-vul3/merkle.GetMultiProof (tree=..., indices=...)
Executing: dump memory dumps/0x200000-0x20c000.bin 0x200000 0x20c000
Executing: dump memory dumps/0x20c000-0x232000.bin 0x20c000 0x232000
Executing: dump memory dumps/0x232000-0x233000.bin 0x232000 0x233000
Executing: dump memory dumps/0x233000-0x239000.bin 0x233000 0x239000
Executing: dump memory dumps/0x7fffb7e00000-0x7ffff7e00000.bin 0x7fffb7e00000 0x7ffff7e00000
Executing: dump memory dumps/0x7ffff7ff9000-0x7ffff7ffd000.bin 0x7ffff7ff9000 0x7ffff7ffd000
Error executing 'dump memory 0x7ffff7ff9000-0x7ffff7ffd000.bin 0x7ffff7ff9000 0x7ffff7ffd000': Cannot access memory at address 0x7ffff7ff9000
Created zero-filled file dumps/0x7ffff7ff9000-0x7ffff7ffd000_zero.bin for inaccessible region from 0x7ffff7ff9000 to 0x7ffff7ffd000.
Executing: dump memory dumps/0x7ffff7ffd000-0x7ffff7fff000.bin 0x7ffff7ffd000 0x7ffff7fff000
Executing: dump memory dumps/0x7ffffffdd000-0x7ffffffff000.bin 0x7ffffffdd000 0x7ffffffff000
Executing: dump memory dumps/0xffffffffff600000-0xffffffffff601000.bin 0xffffffffff600000 0xffffffffff601000
Error executing 'dump memory 0xffffffffff600000-0xffffffffff601000.bin 0xffffffffff600000 0xffffffffff601000': Cannot access memory at address 0xffffffffff600000
Created zero-filled file dumps/0xffffffffff600000-0xffffffffff601000_zero.bin for inaccessible region from 0xffffffffff600000 to 0xffffffffff601000.
