0020c880,__init_array_start,NoArgs=None
0020c89b,tinygo_longjmp,NoArgs=None
0020c8a4,tinygo_startTask,NoArgs=None
0020c8af,tinygo_swapTask,NoArgs=None
0020c8cc,entry,NoArgs=None
0020c8e2,_start_c,p=RDI
0020c905,dummy,NoArgs=None
0020c906,dummy1,p=RAX
0020c907,__init_libc,envp=RDI,pn=RSI
0020ca76,libc_start_init,NoArgs=None
0020caa2,__libc_start_main,main=RDI,argc=ESI,argv=RDX,init_dummy=RCX,fini_dummy=R8,ldso_dummy=R9
0020cad7,libc_start_main_stage2,main=RDI,argc=ESI,argv=RDX
0020cb08,__init_tp,p=RDI
0020cb71,__copy_tls,mem=RDI
0020cbf2,static_init_tls,aux=RDI
0020cd5c,abort,NoArgs=None
0020cdda,_Exit,ec=EDI
0020cdee,dummy,NoArgs=None
0020cdef,libc_exit_fini,NoArgs=None
0020ce22,exit,code=EDI
0020ce3d,dummy,NoArgs=None
0020ce3e,__mmap,start=RDI,len=RSI,prot=EDX,flags=ECX,fd=R8D,off=R9
0020ceec,__errno_location,NoArgs=None
0020cefa,__syscall_ret,r=RDI
0020cf18,__block_all_sigs,set=RDI
0020cf2e,__block_app_sigs,set=RDI
0020cf44,__restore_sigs,set=RDI
0020cf56,raise,sig=EDI
0020cfa6,__libc_sigaction,sig=EDI,sa=RSI,old=RDX
0020d0b7,__sigaction,sig=EDI,sa=RSI,old=RDX
0020d134,__restore_rt,NoArgs=None
0020d135,memcpy,dest=RDI,src=RSI,n=RDX
0020d37f,memset,dest=RDI,c=ESI,n=RDX
0020d450,strlen,s=RDI
0020d4c4,__set_thread_area,NoArgs=None
0020d4d4,__lock,l=RDI
0020d575,__unlock,l=RDI
0020d5ab,__clock_gettime,clk=EDI,ts=RSI
0020d628,cgt_init,clk=EDI,ts=RSI
0020d672,__vdsosym,vername=RDI,name=RSI
0020d87e,strcmp,l=RDI,r=RSI
0020d89a,usleep,useconds=EDI
0020d8c8,nanosleep,req=RDI,rem=RSI
0020d8e3,__clock_nanosleep,clk=EDI,flags=ESI,req=RDX,rem=RCX
0020d930,sccp,nr=RDI,u=RSI,v=RDX,w=RCX,x=R8,y=R9,z=Stack_0x8
0020d94d,__syscall_cp,nr=RDI,u=RSI,v=RDX,w=RCX,x=R8,y=R9,z=Stack_0x8
0020d952,write,fd=EDI,buf=RSI,count=RDX
0020d978,memmove,dest=RDI,src=RSI,n=RDX
0020da60,internal/itoa.Itoa,val=RDI
0020da90,internal/itoa.Uitoa,val=RDI
0020db40,math/bits.TrailingZeros,x=RDI
0020db60,math/bits.TrailingZeros64,x=RDI
0020db80,math/bits.Len,x=RDI
0020dba0,math/bits.Len32,x=EDI
0020dbc0,math/bits.Len64,x=RDI
0020dbe0,math/bits.Add64,x=RDI,y=RSI,carry=RDX
0020dc10,math/bits.Mul64,x=RDI,y=RSI
0020dc60,math.Float64bits,f=XMM0_Qa
0020dc90,math.Float32bits,f=XMM0_Da
0020dcc0,unicode/utf8.DecodeRune,p=Stack_0x8
0020de10,unicode/utf8.DecodeRuneInString,s=Stack_0x8
0020df60,unicode/utf8.RuneLen,r=EDI
0020dfc0,unicode/utf8.EncodeRune,p=Stack_0x8,r=EAX
0020e0f0,unicode/utf8.AppendRune,p=Stack_0x8,r=EAX
0020e150,unicode/utf8.appendRuneNonASCII,p=Stack_0x8,r=EAX
0020e2a0,unicode/utf8.RuneCount,p=Stack_0x8
0020e3b0,unicode/utf8.RuneCountInString,s=Stack_0x8
0020e4c0,unicode/utf8.ValidRune,r=EDI
0020e500,reflect.TypeOf,i=Stack_0x8
0020e520,(*reflect.rawType).Kind,t=RDI
0020e550,(*reflect.rawType).Size,t=RDI
0020e650,(*reflect.rawType).elem,t=RDI
0020e6c0,(*reflect.rawType).Len,t=RDI
0020e700,(*reflect.rawType).underlying,t=RDI
0020e730,(*reflect.rawType).isNamed,t=RDI
0020e760,(*reflect.rawType).ptrtag,t=RDI
0020e770,(*reflect.TypeError).Error,e=RDI
0020e7b0,(*reflect.rawType).ChanDir,t=RDI
0020e7e0,(*reflect.rawType).Elem,t=RDI
0020e7f0,(*reflect.rawType).Field,t=RSI,i=RDX
0020eaa0,(*reflect.rawType).Key,t=RDI
0020eab0,(*reflect.rawType).NumField,t=RDI
0020eaf0,(*reflect.rawType).NumMethod,t=RDI
0020eb30,(*reflect.rawType).String,t=RDI
0020ef60,(*reflect.rawType).isBinary,t=RDI
0020ef80,(*reflect.rawType).key,t=RDI
0020efc0,(*reflect.rawType).name,t=RDI
0020efe0,(*reflect.rawType).rawField,t=RSI,n=RDX
0020f130,reflect.uvarint32,buf=Stack_0x8
0020f190,reflect.readStringZ,data=RDI
0020f1f0,reflect.rawStructFieldFromPointer,descriptor=RAX,fieldType=RBX,data=RCX,flagsByte=DIL,name=Stack_0x8,offset=ESI
0020f380,(reflect.Kind).String,k=DIL
0020f570,reflect.quote,s=Stack_0x8
0020f7e0,reflect.appendEscapedRune,buf=Stack_0x8,r=EAX
0020fb70,reflect.isPrint,r=EDI
0020fbb0,(Go_interface_method),NoArgs=None
0020fbd0,(reflect.Value).IsValid,v=Stack_0x8
0020fc00,(reflect.Value).pointer,v=Stack_0x8
0020fc50,(reflect.Value).Kind,v=Stack_0x8
0020fc80,(reflect.Value).Len,v=Stack_0x8
0020fd80,(reflect.Value).Index,v=Stack_0x8,i=RAX
002102f0,(reflect.Value).IsNil,v=Stack_0x8
00210420,(reflect.Value).UnsafePointer,v=Stack_0x8
00210510,(reflect.Value).Elem,v=Stack_0x8
002106c0,(reflect.Value).NumField,v=Stack_0x8
002106f0,(reflect.Value).Field,v=Stack_0x8,i=RAX
00210ac0,reflect.valueInterfaceUnsafe,v=Stack_0x8
00210ba0,(reflect.Value).isIndirect,v=Stack_0x8
00210bd0,reflect.New,typ=Stack_0x8
00210c80,(Go_interface_method),NoArgs=None
00210ca0,(reflect.Value).Interface,v=Stack_0x8
00210ce0,(reflect.Value).isExported,v=Stack_0x8
00210d10,reflect.pointerTo,t=RDI
00210d60,(*reflect.Kind).String,NoArgs=None
00210d80,(reflect.Kind).String$invoke,NoArgs=None
00210d90,(*reflect.ValueError).Error,e=RDI
00210e70,reflect.ValueOf,i=Stack_0x8
00210ed0,reflect.loadValue,ptr=RDI,size=RSI
00210f10,reflect.maskAndShift,value=RDI,offset=RSI,size=RDX
00210f50,(reflect.valueFlags).ro,v=DIL
00210f60,(reflect.badSyntax).Error,NoArgs=None
00210f70,(*reflect.badSyntax).Error,NoArgs=None
00210f80,(reflect.badSyntax).Error$invoke,NoArgs=None
00210f90,(reflect.Value).CanAddr,v=Stack_0x8
00210fc0,(reflect.Value).Bool,v=Stack_0x8
00211080,(reflect.Value).Bytes,v=Stack_0x8
00211250,(reflect.Value).checkAddressable,v=Stack_0x8
00211270,(reflect.Value).CanInterface,v=Stack_0x8
002112a0,(reflect.Value).isRO,v=Stack_0x8
002112d0,(reflect.Value).Type,v=Stack_0x8
00211300,(Go_interface_method),NoArgs=None
00211320,(reflect.Value).Complex,v=Stack_0x8
00211420,(Go_interface_method),NoArgs=None
00211440,(reflect.Value).Float,v=Stack_0x8
00211540,(reflect.Value).Uint,v=Stack_0x8
002116b0,(reflect.Value).Int,v=Stack_0x8
00211870,(Go_interface_method),NoArgs=None
002118e0,(reflect.Value).MapRange,v=Stack_0x8
00211a30,(reflect.Value).Pointer,v=Stack_0x8
00211a40,(reflect.Value).RawType,v=Stack_0x8
00211a70,(reflect.Value).String,v=Stack_0x8
00211af0,(*reflect.MapIter).Key,it=RDI
00211b70,(*reflect.MapIter).Next,it=RDI
00211c90,(*reflect.MapIter).Value,it=RDI
00211ce0,(*errors.errorString).Error,e=RDI
00211d00,errors.New,text=Stack_0x8
00211d40,(*errors.joinError).Error,e=RDI
00211f20,(Go_interface_method),NoArgs=None
002120b0,runtime/interrupt.Disable,NoArgs=None
002120c0,runtime/interrupt.Restore,state=RDI
002120d0,runtime/interrupt.In,NoArgs=None
002120e0,(*internal/task.gcData).swap,gcd=RDI
002120f0,(*internal/task.Queue).Pop,q=RDI
00212170,(*internal/task.Queue).Push,q=RDI,t=RSI
00212200,(*internal/task.Stack).Pop,s=RDI
00212260,(*internal/task.Stack).Push,s=RDI,t=RSI
002122a0,(*internal/task.Task).Resume,t=RDI
00212300,(*internal/task.state).resume,s=RDI
00212320,(*internal/task.state).archInit,s=RDI,r=RSI,fn=RDX,args=RCX
00212370,(*internal/task.state).initialize,s=RDI,fn=RSI,args=RDX,stackSize=RCX
002123f0,(*internal/task.state).pause,s=RDI
00212420,internal/task.Current,NoArgs=None
00212430,internal/task.Pause,NoArgs=None
002124b0,internal/task.pause,NoArgs=None
002124c0,internal/task.start,fn=RDI,args=RSI,stackSize=RDX
00212510,internal/task.OnSystemStack,NoArgs=None
00212520,internal/task.SystemStack,NoArgs=None
00212530,sync/atomic.StorePointer,addr=RDI,val=RSI
00212540,runtime.alloc,size=RDI,layout=RSI
00212710,runtime.align,ptr=RDI
00212720,runtime.runtimePanicAt,addr=RAX,msg=Stack_0x8
00212780,runtime.runGC,NoArgs=None
002127a0,runtime.growHeap,NoArgs=None
00212810,(runtime.gcBlock).state,b=RDI
00212840,(runtime.gcBlock).pointer,b=RDI
00212850,runtime.printstring,s=Stack_0x8
00212890,runtime.printptr,ptr=RDI
00212900,runtime.printint64,n=RDI
00212920,runtime.printnl,NoArgs=None
00212930,(runtime.gcBlock).setState,b=RDI,newState=SIL
00212960,runtime.memzero,ptr=RDI,size=RSI
00212970,runtime.runtimePanic,msg=Stack_0x8
00212990,runtime.putchar,c=DIL
002129c0,runtime.printuint64,n=RDI
00212a50,(runtime.gcBlock).address,b=RDI
00212a60,runtime.setHeapEnd,newHeapEnd=RDI
00212aa0,runtime.calculateHeapAddresses,NoArgs=None
00212af0,runtime.memcpy,dst=RDI,src=RSI,size=RDX
00212b00,runtime.markStack,NoArgs=None
00212b30,runtime.markRoots,start=RDI,end=RSI
00212b60,runtime.findGlobals,found=Stack_0x8
00212c00,runtime.finishMark,NoArgs=None
00212c60,runtime.markRoot,addr=RDI,root=RSI
00212cb0,runtime.sweep,NoArgs=None
00212d40,(runtime.gcBlock).markFree,b=RDI
00212d70,(runtime.gcBlock).unmark,b=RDI
00212da0,runtime.isOnHeap,ptr=RDI
00212dc0,runtime.blockFromAddr,addr=RDI
00212dd0,(runtime.gcBlock).findHead,b=RDI
00212e00,runtime.startMark,root=RDI
00212ff0,runtime.newGCObjectScanner,block=RSI
002130a0,(*runtime.gcObjectScanner).pointerFree,scanner=RDI
002130e0,(runtime.gcBlock).findNext,b=RDI
00213120,(*runtime.gcObjectScanner).nextIsPointer,scanner=RDI,word=RSI,parent=RDX,addrOfWord=RCX
00213220,runtime.lookupPanic,NoArgs=None
00213240,runtime.nilPanic,NoArgs=None
00213260,runtime.getSystemStackPointer,NoArgs=None
00213280,runtime.getCurrentStackPointer,NoArgs=None
00213290,runtime.stacksave,NoArgs=None
002132a0,runtime.fastrand,NoArgs=None
002132c0,runtime.xorshift32,x=EDI
002132e0,runtime.hash32,ptr=RDI,n=RSI,seed=RDX
00213310,runtime.chanLen,c=RDI
00213330,runtime._panic,message=Stack_0x8
002133a0,runtime.printitf,msg=Stack_0x8
00213670,runtime.printbool,b=DIL
002136a0,runtime.printint8,n=DIL
002136b0,runtime.printint16,n=DI
002136c0,runtime.printint32,n=EDI
002136e0,runtime.printuint8,n=DIL
002136f0,runtime.printuint16,n=DI
00213700,runtime.printuint32,n=EDI
00213710,runtime.printfloat32,v=XMM0_Da
00213ab0,runtime.printfloat64,v=XMM0_Qa
00213e60,runtime.printcomplex64,c=RAX
00213ea0,runtime.printcomplex128,c=Stack_0x8
00213ef0,(Go_interface_assert),NoArgs=None
00213fc0,(Go_interface_assert),NoArgs=None
00214050,(Go_interface_method),NoArgs=None
00214140,runtime.printuintptr,n=RDI
00214150,runtime.runqueuePushBack,t=RDI
00214160,runtime.stringEqual,x=Stack_0x8,y=Stack_0x18
00214190,runtime.sliceCopy,dst=RDI,src=RSI,dstLen=RDX,srcLen=RCX,elemSize=R8
002141b0,runtime.slicePanic,NoArgs=None
002141d0,runtime.memmove,dst=RDI,src=RSI,size=RDX
002141e0,runtime.initHeap,NoArgs=None
00214200,runtime.scanstack,sp=RDI
00214230,runtime.hashmapNewIterator,NoArgs=None
00214250,runtime.hashmapTopHash,hash=EDI
00214260,runtime.hashmapMake,keySize=RDI,valueSize=RSI,sizeHint=RDX,alg=CL
002143a0,runtime.hashmapHasSpaceToGrow,bucketBits=DIL
002143b0,runtime.hashmapOverLoadFactor,n=RDI,bucketBits=SIL
002143d0,runtime.hashmapKeyHashAlg,alg=DIL
00214400,runtime.hashmapKeyEqualAlg,alg=DIL
00214430,runtime.memequal,x=RDI,y=RSI,n=RDX
00214460,runtime.hashmapStringEqual,x=RDI,y=RSI,n=RDX
00214480,runtime.hashmapInterfaceEqual,x=RDI,y=RSI,n=RDX
002144a0,runtime.interfaceEqual,x=Stack_0x8,y=Stack_0x18
002144f0,runtime.reflectValueEqual,x=Stack_0x8,y=Stack_0x20
002148c0,runtime.hashmapStringPtrHash,sptr=RDI,size=RSI,seed=RDX
00214900,runtime.hashmapInterfacePtrHash,iptr=RDI,size=RSI,seed=RDX
00214920,runtime.hashmapInterfaceHash,itf=Stack_0x8,seed=RAX
00214bb0,runtime.hashmapFloat32Hash,ptr=RDI,seed=RSI
00214c00,runtime.hashmapFloat64Hash,ptr=RDI,seed=RSI
00214c50,runtime.hashmapStringHash,s=Stack_0x8,seed=RAX
00214ca0,runtime.hashmapBucketSize,m=RDI
00214ce0,runtime.hashmapBucketAddr,m=RDI,buckets=RSI,n=RDX
00214d00,runtime.hashmapLen,m=RDI
00214d20,runtime.hashmapBucketAddrForHash,m=RDI,hash=ESI
00214d60,runtime.hashmapSlotKey,m=RDI,bucket=RSI,slot=DL
00214d90,runtime.hashmapSlotValue,m=RDI,bucket=RSI,slot=DL
00214dd0,runtime.hashmapSet,m=RDI,key=RSI,value=RDX,hash=ECX
002150f0,runtime.hashmapGrow,m=RDI
00215310,runtime.hashmapInsertIntoNewBucket,m=RDI,key=RSI,value=RDX,tophash=CL
002153e0,runtime.hashmapNext,m=RDI,it=RSI,key=RDX,value=RCX
00215810,runtime.hashmapGet,m=RDI,key=RSI,value=RDX,valueSize=RCX,hash=R8D
00215970,runtime.nilMapPanic,NoArgs=None
00215990,runtime.hashmapStringSet,m=RAX,key=Stack_0x8,value=RBX
00215a10,runtime.hashmapStringGet,m=RAX,key=Stack_0x8,value=RBX,valueSize=RCX
00215a90,runtime.composeInterface,typecode=RDI,value=RSI
00215ad0,runtime.decomposeInterface,i=Stack_0x8
00215b10,runtime.interfaceTypeAssert,ok=DIL
00215b30,runtime.setupDeferFrame,frame=RDI,jumpSP=RSI
00215ba0,runtime.destroyDeferFrame,frame=RDI
00215c00,runtime._recover,useParentFrame=DIL
00215c70,runtime.unsafeSlicePanic,NoArgs=None
00215c90,runtime.negativeShiftPanic,NoArgs=None
00215cb0,runtime.divideByZeroPanic,NoArgs=None
00215cd0,runtime.GOROOT,NoArgs=None
00215ce0,runtime.nanotime,NoArgs=None
00215cf0,runtime.ticks,NoArgs=None
00215d00,runtime.ticksToNanoseconds,ticks=RDI
00215d10,runtime.monotime,NoArgs=None
00215d20,runtime.getTime,clock=EDI
00215d70,runtime.clock_gettime,clk_id=EDI,ts=RSI
00215d80,runtime.write,fd=RDI,p=RSI,n=EDX
00215de0,runtime.main,argc=EDI,argv=RSI
00215e20,runtime.preinit,NoArgs=None
00215ea0,runtime.runMain,NoArgs=None
00215eb0,runtime.run,NoArgs=None
00215ed0,<goroutine_wrapper>,NoArgs=None
00215ee0,runtime.scheduler,NoArgs=None
00216160,runtime.scheduleLog,msg=Stack_0x8
00216170,runtime.scheduleLogTask,msg=Stack_0x8,t=RAX
00216180,(*runtime.timerNode).whenTicks,t=RDI
002161b0,runtime.waitForEvents,NoArgs=None
002161d0,runtime.sleepTicks,d=RDI
00216200,runtime.nanosecondsToTicks,ns=RDI
00216210,runtime.run$1,NoArgs=None
00216230,runtime.initAll,NoArgs=None
002162b0,runtime.os_runtime_args,NoArgs=None
002163b0,runtime.tinygo_handle_fatal_signal,sig=EDI,addr=RSI
00216450,runtime.syscall_runtime_envs,NoArgs=None
00216590,runtime.sliceAppend,srcBuf=RDI,elemsBuf=RSI,srcLen=RDX,srcCap=RCX,elemsLen=R8,elemSize=R9
00216600,runtime.sliceGrow,oldBuf=RDI,oldLen=RSI,oldCap=RDX,newCap=RCX,elemSize=R8
00216690,runtime.now,NoArgs=None
002166e0,runtime.stringLess,x=Stack_0x8,y=Stack_0x18
00216730,runtime.stringConcat,x=Stack_0x8,y=Stack_0x18
00216860,runtime.stringFromBytes,x=Stack_0x8
002168f0,runtime.stringToBytes,x=Stack_0x8
002169a0,runtime.encodeUTF8,x=ESI
00216ad0,runtime.stringNext,s=Stack_0x8,it=RAX
00216b30,runtime.decodeUTF8,s=Stack_0x8,index=RAX
00216ce0,runtime.isContinuation,b=DIL
00216cf0,runtime.stringFromUnicode,x=EDI
00216d60,(*slices.xorshift).Next,r=RDI
00216dc0,slices.nextPowerOfTwo,length=RDI
00216df0,internal/fmtsort.Sort,mapValue=Stack_0x8
00216fd0,internal/fmtsort.Sort$1,a=Stack_0x8,b=Stack_0x38
00217070,slices.SortStableFunc[internal/fmtsort.SortedMap_internal/fmtsort.KeyValue],x=Stack_0x8,cmp=Stack_0x20
00217090,slices.stableCmpFunc[internal/fmtsort.KeyValue],data=Stack_0x8,n=RAX,cmp=Stack_0x20
002171b0,slices.insertionSortCmpFunc[internal/fmtsort.KeyValue],data=Stack_0x8,a=RAX,b=RBX,cmp=Stack_0x20
00217390,slices.symMergeCmpFunc[internal/fmtsort.KeyValue],data=Stack_0x8,a=RAX,m=RBX,b=RCX,cmp=Stack_0x20
00217930,slices.rotateCmpFunc[internal/fmtsort.KeyValue],data=Stack_0x8,a=RAX,m=RBX,b=RCX,cmp=Stack_0x20
00217a10,slices.swapRangeCmpFunc[internal/fmtsort.KeyValue],data=Stack_0x8,a=RAX,b=RBX,n=RCX,cmp=Stack_0x20
00217b50,internal/fmtsort.compare,aVal=Stack_0x8
00218080,cmp.Compare[int64],x=RDI,y=RSI
002180d0,cmp.Compare[uint64],x=RDI,y=RSI
00218120,cmp.Compare[string],x=Stack_0x8,y=Stack_0x18
002181a0,cmp.Compare[float64],x=XMM0_Qa,y=XMM1_Qa
00218200,cmp.Compare[uintptr],x=RDI,y=RSI
00218250,internal/fmtsort.nilCompare,aVal=Stack_0x8,bVal=Stack_0x20
002182b0,cmp.isNaN[uintptr],x=RDI
002182c0,cmp.isNaN[float64],x=XMM0_Qa
002182d0,cmp.isNaN[string],x=Stack_0x8
002182e0,cmp.isNaN[uint64],x=RDI
002182f0,cmp.isNaN[int64],x=RDI
00218300,runtime/volatile.LoadUint8,addr=RDI
00218310,runtime/volatile.StoreUint8,addr=RDI,val=SIL
00218320,(*sync.Mutex).Lock,m=RDI
00218370,(*sync.Mutex).Unlock,m=RDI
002183c0,(*sync.Mutex).islocked,m=RDI
002183e0,(*sync.Mutex).setlock,m=RDI,b=SIL
00218410,sync.boolToU8,b=DIL
00218420,(*sync.RWMutex).RLock,rw=RDI
002184a0,(*sync.RWMutex).RUnlock,rw=RDI
00218520,(*sync.RWMutex).maybeUnblockWriter,rw=RDI
00218560,(*sync.Once).Do,o=RAX,f=Stack_0x8
00218740,(*sync.Pool).Get,p=RDI
00218850,(*sync.Pool).Put,p=RAX,x=Stack_0x8
002188e0,(*io.discard).Write,NoArgs=None
00218900,(io.discard).Write,NoArgs=None
00218910,(io.discard).Write$invoke,NoArgs=None
00218930,(Go_interface_method),NoArgs=None
002189d0,(*io.multiWriter).Write,t=RAX,p=Stack_0x8
00218a60,internal/bytealg.IndexByte,b=Stack_0x8,c=AL
00218aa0,internal/bytealg.IndexByteString,s=Stack_0x8,c=AL
00218ad0,(*internal/bisect.parseError).Error,e=RDI
00218af0,(*internal/godebug.runtimeStderr).Write,arg0=RAX,b=Stack_0x8
00218b20,internal/stringslite.Clone,s=Stack_0x8
00218bc0,(*syscall.Errno).Error,NoArgs=None
00218be0,(syscall.Errno).Error,e=RDI
00218c50,(syscall.Errno).Error$invoke,NoArgs=None
00218c60,syscall.errnoErr,e=RDI
00218cc0,syscall.init#1,NoArgs=None
00218d60,syscall.Getrlimit,resource=RDI,rlim=RSI
00218da0,(*sync/atomic.Pointer[syscall.Rlimit]).Store[syscall.Rlimit],x=RDI,val=RSI
00218dc0,syscall.adjustFileLimit,lim=RDI
00218dd0,syscall.setrlimit,resource=RDI,rlim=RSI
00218e10,syscall.copyenv,NoArgs=None
00218f50,syscall.Getenv,key=Stack_0x8
002192b0,syscall.Close,fd=RDI
002192f0,syscall.Open,path=Stack_0x8,mode=RAX,perm=EBX
00219310,syscall.Write,fd=RAX,p=Stack_0x8
00219320,syscall.write,fd=RAX,p=Stack_0x8
00219380,syscall.openat,dirfd=RAX,path=Stack_0x8,flags=RBX,mode=ECX
00219410,syscall.BytePtrFromString,s=Stack_0x8
00219460,syscall.ByteSliceFromString,s=Stack_0x8
00219510,syscall.Getpid,NoArgs=None
00219520,(syscall.Signal).String,s=RDI
00219590,syscall.Read,fd=RAX,p=Stack_0x8
002195a0,syscall.read,fd=RAX,p=Stack_0x8
002195f0,syscall.Seek,fd=RDI,offset=RSI,whence=RDX
00219640,time.startsWithLowerCase,str=Stack_0x8
00219660,time.nextStdChunk,layout=Stack_0x8
0021aa40,time.isDigit[string],s=Stack_0x8,i=RAX
0021aa70,time.stdFracSecond,code=RDI,n=RSI,c=RDX
0021aa90,time.appendInt,b=Stack_0x8,x=RAX,width=RBX
0021ae30,time.appendInt$1,u=RDI
0021ae40,time.digitsLen,std=RDI
0021ae50,time.separator,std=RDI
0021ae60,time.appendNano,b=Stack_0x8,nanosec=RAX,std=RBX
0021afc0,(*time.ParseError).Error,e=RDI
0021b160,time.quote,s=Stack_0x8
0021b480,time.isLeap,year=RDI
0021b4f0,time.daysIn,m=RDI,year=RSI
0021b540,(*time.Time).unixSec,t=RDI
0021b560,(*time.Location).lookup,l=RSI,sec=RDX
0021ba00,(*time.Location).get,l=RDI
0021ba40,time.initLocal,NoArgs=None
0021bd30,time.loadLocation,name=Stack_0x8,sources=Stack_0x18
0021c000,time.loadTzinfo,name=Stack_0x8,source=Stack_0x18
0021c0e0,time.LoadLocationFromTZData,name=Stack_0x8,data=Stack_0x18
0021cb40,time.gorootZoneSource,goroot=Stack_0x8
0021cb80,(*time.dataIO).read,d=RDI,n=RSI
0021cc40,(*time.dataIO).big4,d=RDI
0021ccb0,(*time.dataIO).rest,d=RDI
0021cce0,(*time.dataIO).byte,d=RDI
0021cd20,time.byteString,p=Stack_0x8
0021cd70,(*time.dataIO).big8,d=RDI
0021cdc0,time.tzset,s=Stack_0x8,lastTxSec=RAX,sec=RBX
0021d260,time.findZone,zones=Stack_0x8,name=Stack_0x20,offset=RAX,isDST=BL
0021d340,time.tzsetName,s=Stack_0x8
0021d4d0,time.tzsetOffset,s=Stack_0x8
0021d680,time.tzsetRule,s=Stack_0x8
0021da30,time.absDate,abs=RSI,full=DL
0021dbd0,time.daysSinceEpoch,year=RDI
0021dc50,time.tzruleTime,year=RAX,r=Stack_0x8,off=RBX
0021df30,time.tzsetNum,s=Stack_0x8,min=RAX,max=RBX
0021e020,time.loadTzinfoFromDirOrZip,dir=Stack_0x8,name=Stack_0x18
0021e130,time.loadTzinfoFromZip,zipfile=Stack_0x8,name=Stack_0x18
0021f420,time.readFile,name=Stack_0x8
0021f920,time.open,name=Stack_0x8
0021f940,time.closefd,fd=RDI
0021f950,time.read,fd=RAX,buf=Stack_0x8
0021f960,(*time.fileSizeError).Error,NoArgs=None
0021f980,(time.fileSizeError).Error,f=Stack_0x8
0021f9b0,(time.fileSizeError).Error$invoke,NoArgs=None
0021f9d0,time.preadn,fd=RAX,buf=Stack_0x8,off=RBX
0021fa80,time.get4,b=Stack_0x8
0021fad0,time.get2,b=Stack_0x8
0021fb00,(*time.Time).sec,t=RDI
0021fb50,(*time.Location).lookupFirstZone,l=RDI
0021fcc0,(*time.Location).firstZoneUsed,l=RDI
0021fd50,time.Now,NoArgs=None
0021fe60,(*time.Time).nsec,t=RDI
0021fe80,(*time.Location).String,l=RDI
0021fea0,(*time.Time).GoString,NoArgs=None
0021fec0,(*time.Time).String,NoArgs=None
0021fee0,(time.Time).locabs,t=Stack_0x8
00220050,(time.Time).abs,t=Stack_0x8
00220150,(time.Time).appendFormatRFC3339,t=Stack_0x8,b=Stack_0x20,nanos=AL
00220540,time.absClock,abs=RDI
002205b0,(time.Time).Nanosecond,t=Stack_0x8
002205f0,(time.Time).appendFormat,NoArgs=None
002210b0,(time.Month).String,m=RDI
00221180,time.absWeekday,abs=RDI
002211c0,(time.Weekday).String,d=RDI
00221290,time.fmtInt,buf=Stack_0x8,v=RAX
00221310,(time.Time).Unix,t=Stack_0x8
00221350,(time.Time).String,t=Stack_0x8
00221540,(time.Time).Format,t=Stack_0x8,layout=Stack_0x20
002215e0,(time.Time).AppendFormat,t=Stack_0x8,b=Stack_0x20,layout=Stack_0x38
002216a0,(time.Time).Location,t=Stack_0x8
002216e0,(time.Time).GoString,NoArgs=None
00221a60,(time.Time).GoString$invoke,NoArgs=None
00221a80,(time.Time).String$invoke,NoArgs=None
00221aa0,(Go_interface_method),NoArgs=None
00221ac0,(Go_interface_method),NoArgs=None
00221ae0,(io/fs.FileMode).String,m=EDI
00221c30,(Go_interface_method),NoArgs=None
00221c50,io/fs.FormatDirEntry,dir=Stack_0x8
00221dc0,(Go_interface_method),NoArgs=None
00221e00,(Go_interface_method),NoArgs=None
00221e40,(Go_interface_method),NoArgs=None
00221e80,(io/fs.FileMode).IsDir,m=EDI
00221e90,(io/fs.FileMode).Type,m=EDI
00221ea0,(*io/fs.PathError).Error,e=RDI
00221f40,(io/fs.dirInfo).IsDir,di=Stack_0x8
00221f80,(io/fs.dirInfo).Name,di=Stack_0x8
00221fc0,(io/fs.dirInfo).String,di=Stack_0x8
00222000,(*io/fs.dirInfo).IsDir,NoArgs=None
00222020,(*io/fs.dirInfo).Name,NoArgs=None
00222040,(*io/fs.dirInfo).String,NoArgs=None
00222060,(*io/fs.dirInfo).Type,NoArgs=None
00222080,(io/fs.dirInfo).Type,di=Stack_0x8
002220c0,(io/fs.dirInfo).IsDir$invoke,NoArgs=None
002220e0,(io/fs.dirInfo).Name$invoke,NoArgs=None
00222100,(io/fs.dirInfo).String$invoke,NoArgs=None
00222120,(io/fs.dirInfo).Type$invoke,NoArgs=None
00222140,slices.Sort[[]int_int],x=Stack_0x8
00222180,slices.pdqsortOrdered[int],data=Stack_0x8,a=RAX,b=RBX,limit=RCX
002223e0,slices.insertionSortOrdered[int],data=Stack_0x8,a=RAX,b=RBX
00222490,slices.heapSortOrdered[int],data=Stack_0x8,a=RAX,b=RBX
00222570,slices.choosePivotOrdered[int],data=Stack_0x8,a=RAX,b=RBX
002226e0,slices.reverseRangeOrdered[int],data=Stack_0x8,a=RAX,b=RBX
00222730,slices.partialInsertionSortOrdered[int],data=Stack_0x8,a=RAX,b=RBX
00222940,cmp.Less[int],x=RDI,y=RSI
00222980,slices.partitionEqualOrdered[int],data=Stack_0x8,a=RAX,b=RBX,pivot=RCX
00222a80,slices.partitionOrdered[int],data=Stack_0x8,a=RAX,b=RBX,pivot=RCX
00222ca0,slices.breakPatternsOrdered[int],a=RAX,b=RBX
00222db0,cmp.isNaN[int],x=RDI
00222dc0,slices.medianAdjacentOrdered[int],data=Stack_0x8,a=RAX,swaps=RBX
00222de0,slices.medianOrdered[int],data=Stack_0x8,a=RAX,b=RBX,c=RCX,swaps=RDI
00222e50,slices.order2Ordered[int],data=Stack_0x8,a=RAX,b=RBX,swaps=RCX
00222eb0,slices.siftDownOrdered[int],data=Stack_0x8,lo=RAX,hi=RBX,first=RCX
00222f80,(*strings.appendSliceWriter).Write,w=RAX,p=Stack_0x8
00222fd0,(*os.DeadlineExceededError).Error,e=RDI
00222fe0,(*syscall.Signal).String,NoArgs=None
00223000,(syscall.Signal).String$invoke,NoArgs=None
00223010,(*io/fs.FileMode).String,NoArgs=None
00223030,(io/fs.FileMode).String$invoke,NoArgs=None
00223040,(*os.fileStat).IsDir,fs=RDI
00223050,(*os.fileStat).Mode,fs=RDI
00223070,(*os.fileStat).Name,fs=RDI
00223090,os.handleSyscallError,err=Stack_0x8
00223100,(*os.unixFileHandle).Write,NoArgs=None
00223120,(os.unixFileHandle).Write,f=RAX,b=Stack_0x8
00223150,(os.unixFileHandle).Write$invoke,NoArgs=None
00223160,os.init#3,NoArgs=None
002231c0,os.Getpid,NoArgs=None
002231d0,(*os.unixDirent).IsDir,d=RDI
002231f0,(*os.unixDirent).Name,d=RDI
00223210,(*os.unixDirent).Type,d=RDI
00223230,(*os.SyscallError).Error,e=RDI
00223290,(*os.LinkError).Error,e=RDI
00223370,(*os.File).Write,f=RAX,b=Stack_0x8
00223480,(Go_interface_method),NoArgs=None
002234c0,strconv.syntaxError,fn=Stack_0x8,str=Stack_0x18
00223550,(*strconv.NumError).Error,e=RDI
00223630,strconv.Quote,s=Stack_0x8
00223650,strconv.quoteWith,s=Stack_0x8,quote=AL,ASCIIonly=BL,graphicOnly=CL
00223710,strconv.appendQuotedWith,buf=Stack_0x8,s=Stack_0x20,quote=AL,ASCIIonly=BL,graphicOnly=CL
002239b0,strconv.appendEscapedRune,buf=Stack_0x8,r=EAX,quote=BL,ASCIIonly=CL,graphicOnly=DIL
00223d50,strconv.IsPrint,r=EDI
00223ec0,strconv.isInGraphicList,r=EDI
00223ef0,strconv.bsearch[[]uint16_uint16],s=Stack_0x8,v=AX
00223f40,strconv.bsearch[[]uint32_uint32],s=Stack_0x8,v=EAX
00223f90,strconv.rangeError,fn=Stack_0x8,str=Stack_0x18
00224020,(*strconv.decimal).Shift,a=RDI,k=RSI
002240b0,strconv.shouldRoundUp,a=RDI,nd=RSI
00224170,strconv.leftShift,a=RDI,k=RSI
00224480,strconv.rightShift,a=RDI,k=RSI
002246e0,strconv.trim,a=RDI
002247b0,strconv.prefixIsLessThan,b=Stack_0x8,s=Stack_0x20
00224800,strconv.lower,c=DIL
00224810,strconv.underscoreOK,s=Stack_0x8
002249a0,strconv.baseError,fn=Stack_0x8,str=Stack_0x18,base=RAX
00224a50,strconv.Itoa,i=RDI
00224a60,strconv.FormatInt,i=RDI,base=RSI
00224ac0,strconv.small,i=RDI
00224b20,strconv.formatBits,dst=Stack_0x8,u=RAX,base=RBX,neg=CL,append_=DIL
00224e90,strconv.isPowerOfTwo,x=RDI
00224ea0,strconv.bitSizeError,fn=Stack_0x8,str=Stack_0x18,bitSize=RAX
00224f50,strconv.ParseUint,base=RAX,bitSize=RBX
00225360,strconv.ParseInt,s=Stack_0x8,base=RAX,bitSize=RBX
002255b0,strconv.Atoi,s=Stack_0x8
00225710,strconv.genericFtoa,dst=Stack_0x8,val=XMM0_Qa,fmt=AL,prec=RBX,bitSize=RCX
00225cc0,strconv.fmtB,dst=Stack_0x8,neg=AL,mant=RBX,exp=RCX,flt=RDI
00225e20,strconv.fmtX,dst=Stack_0x8,prec=RAX,fmt=BL,neg=CL,mant=RDI,exp=RSI,flt=R8
00226430,strconv.ryuFtoaShortest,d=RDI,mant=RSI,exp=RDX,flt=RCX
00226830,strconv.formatDigits,dst=Stack_0x8,shortest=AL,neg=BL,digs=Stack_0x20,prec=RCX,fmt=DIL
00226a60,strconv.bigFtoa,dst=Stack_0x8,prec=RAX,fmt=BL,neg=CL,mant=RDI,exp=RSI,flt=R8
00226d50,strconv.ryuFtoaFixed32,d=RDI,mant=ESI,exp=RDX,prec=RCX
00226f90,strconv.ryuFtoaFixed64,d=RDI,mant=RSI,exp=RDX,prec=RCX
002271d0,strconv.mulByLog2Log10,x=RDI
002271e0,strconv.mult128bitPow10,m=RDI,e2=RSI,q=RDX
002272e0,strconv.divisibleByPower5,m=RDI,k=RSI
00227340,strconv.formatDecimal,d=RDI,m=RSI,trunc=DL,roundUp=CL,prec=R8
00227600,strconv.mulByLog10Log2,x=RDI
00227610,strconv.mult64bitPow10,m=EDI,e2=RSI,q=RDX
002276c0,(*strconv.decimal).Assign,a=RDI,v=RSI
002277f0,strconv.roundShortest,d=RDI,mant=RSI,exp=RDX,flt=RCX
00227c00,(*strconv.decimal).Round,a=RDI,nd=RSI
00227c50,(*strconv.decimal).RoundUp,a=RDI,nd=RSI
00227d50,(*strconv.decimal).RoundDown,a=RDI,nd=RSI
00227d90,strconv.fmtE,dst=Stack_0x8,neg=AL,d=Stack_0x20,prec=RBX,fmt=CL
002281a0,strconv.fmtF,dst=Stack_0x8,neg=AL,d=Stack_0x20,prec=RBX
00228450,strconv.ryuDigits,d=RDI,lower=RSI,central=RDX,upper=RCX,c0=R8B,cup=R9B
002287f0,strconv.computeBounds,mant=RSI,exp=RDX,flt=RCX
00228890,strconv.divmod1e9,x=RDI
002288c0,strconv.ryuDigits32,d=RAX,lower=EBX,central=ECX,upper=EDI,c0=SIL,cup=R8B,endindex=R9
00228af0,strconv.AppendFloat,dst=Stack_0x8,f=XMM0_Qa,fmt=AL,prec=RBX,bitSize=RCX
00228b00,strconv.appendQuotedRuneWith,buf=Stack_0x8,r=EAX,quote=BL,ASCIIonly=CL,graphicOnly=DIL
00228bd0,strconv.AppendQuote,dst=Stack_0x8,s=Stack_0x20
00228bf0,strconv.AppendQuoteToASCII,dst=Stack_0x8,s=Stack_0x20
00228c10,strconv.AppendQuoteRune,dst=Stack_0x8,r=EAX
00228c30,strconv.AppendQuoteRuneToASCII,dst=Stack_0x8,r=EAX
00228c60,strconv.CanBackquote,s=Stack_0x8
00228cd0,fmt.init$1,NoArgs=None
00228cf0,(*fmt.buffer).write,b=RAX,p=Stack_0x8
00228d40,(*fmt.buffer).writeByte,b=RDI,c=SIL
00228dc0,(*fmt.buffer).writeRune,b=RDI,r=ESI
00228e00,(*fmt.buffer).writeString,b=RAX,s=Stack_0x8
00228e50,(*fmt.fmt).clearflags,f=RDI
00228ea0,(*fmt.fmt).fmtBoolean,f=RDI,v=SIL
00228ed0,(*fmt.fmt).fmtBs,f=RAX,b=Stack_0x8
00228ef0,(*fmt.fmt).fmtBx,f=RAX,b=Stack_0x8,digits=Stack_0x20
00228f20,(*fmt.fmt).fmtC,f=RDI,c=RSI
00228f70,(*fmt.fmt).fmtFloat,f=RDI,v=XMM0_Qa,size=RSI,verb=EDX,prec=RCX
002295c0,(*fmt.fmt).fmtInteger,f=RAX,u=RBX,base=RCX,isSigned=DIL,verb=ESI,digits=Stack_0x8
00229c00,(*fmt.fmt).fmtQ,f=RAX,s=Stack_0x8
00229cf0,(*fmt.fmt).fmtQc,f=RDI,c=RSI
00229d60,(*fmt.fmt).fmtS,f=RAX,s=Stack_0x8
00229d80,(*fmt.fmt).fmtSbx,f=RAX,s=Stack_0x8,b=Stack_0x18,digits=Stack_0x30
0022a290,(*fmt.fmt).fmtSx,f=RAX,s=Stack_0x8,digits=Stack_0x18
0022a2c0,(*fmt.fmt).fmtUnicode,f=RDI,u=RSI
0022a5c0,(*fmt.fmt).init,f=RDI,buf=RSI
0022a5e0,(*fmt.fmt).pad,f=RAX,b=Stack_0x8
0022a6e0,(*fmt.fmt).padString,f=RAX,s=Stack_0x8
0022a7d0,(*fmt.fmt).truncate,f=RAX,b=Stack_0x8
0022a8c0,(*fmt.fmt).truncateString,f=RAX,s=Stack_0x8
0022a950,(*fmt.fmt).writePadding,f=RDI,n=RSI
0022aac0,(*reflect.Value).String,NoArgs=None
0022aae0,(reflect.Value).String$invoke,NoArgs=None
0022ab00,(*fmt.pp).Write,p=RAX,b=Stack_0x8
0022ab20,(*fmt.pp).argNumber,p=RAX,argNum=RBX,format=Stack_0x8,i=RCX,numArgs=RDI
0022abe0,(*fmt.pp).badArgNum,p=RDI,verb=ESI
0022ac30,(*fmt.pp).badVerb,p=RDI,verb=ESI
0022ae20,(*fmt.pp).catchPanic,p=RAX,arg=Stack_0x8,verb=EBX,method=Stack_0x18
0022b0b0,(*fmt.pp).doPrintf,p=RAX,format=Stack_0x8,a=Stack_0x18
0022bf00,(*fmt.pp).doPrintln,p=RAX,a=Stack_0x8
0022bf90,(*fmt.pp).fmt0x64,p=RDI,v=RSI,leading0x=DL
0022c030,(*fmt.pp).fmtBool,p=RDI,v=SIL,verb=EDX
0022c060,(*fmt.pp).fmtBytes,p=RAX,v=Stack_0x8,verb=EBX,typeString=Stack_0x20
0022c310,(*fmt.pp).fmtComplex,p=RAX,v=Stack_0x8,size=RBX,verb=ECX
0022c490,(*fmt.pp).fmtFloat,p=RDI,v=XMM0_Qa,size=RSI,verb=EDX
0022c520,(*fmt.pp).fmtInteger,p=RDI,v=RSI,isSigned=DL,verb=ECX
0022c6e0,(*fmt.pp).fmtPointer,p=RAX,value=Stack_0x8,verb=EBX
0022c8d0,(*fmt.pp).fmtString,p=RAX,v=Stack_0x8,verb=EBX
0022c990,(*fmt.pp).free,p=RDI
0022cb00,(*fmt.pp).handleMethods,p=RDI,verb=ESI
0022d6a0,(*fmt.pp).missingArg,p=RDI,verb=ESI
0022d6f0,(*fmt.pp).printArg,p=RAX,arg=Stack_0x8,verb=EBX
0022dae0,(*fmt.pp).printValue,p=RAX,value=Stack_0x8,verb=EBX,depth=RCX
0022e690,(*fmt.pp).unknownType,p=RAX,v=Stack_0x8
0022e730,fmt.getField,v=Stack_0x8,i=RAX
0022e7a0,(Go_interface_assert),NoArgs=None
0022e7b0,(Go_interface_method),NoArgs=None
0022e7c0,(Go_interface_assert),NoArgs=None
0022e7e0,(Go_interface_method),NoArgs=None
0022e810,fmt.intFromArg,a=Stack_0x8,argNum=RAX
0022e920,fmt.parsenum,s=Stack_0x8,start=RAX,end=RBX
0022e9c0,fmt.tooLarge,x=RDI
0022e9e0,fmt.parseArgNumber,format=Stack_0x8
0022ea50,fmt.Errorf,format=Stack_0x8,a=Stack_0x18
0022edd0,fmt.newPrinter,NoArgs=None
0022ee60,(*fmt.wrapErrors).Error,e=RDI
0022ee80,(*fmt.wrapError).Error,e=RDI
0022eea0,fmt.Fprintf,w=Stack_0x8,format=Stack_0x18,a=Stack_0x28
0022ef30,fmt.Printf,format=Stack_0x8,a=Stack_0x18
0022ef60,fmt.Fprintln,w=Stack_0x8,a=Stack_0x18
0022efe0,fmt.Println,a=Stack_0x8
0022f000,main.coreEngine,num1=RAX,operator=Stack_0x8,num2=RBX
0022f150,main.main,NoArgs=None
0022f2b0,tinygo_register_fatal_signals,NoArgs=None
0022f330,signal_handler,sig=EAX,info=RBX,context=RCX
